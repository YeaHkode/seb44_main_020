spring:
  config:
    import: 'aws-parameterstore:'
  #  h2:
  #    console:
  #      enabled: true
  #      path: /h2
  #  datasource:
  #    url: jdbc:h2:mem:test
  datasource:
    url: jdbc:mysql://${AWS_RDS_Endpoint}/test?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
    username: admin
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: ${MYSQL_SECRET}
  jpa:
    #    defer-datasource-initialization: true
    #    hibernate:
    #      ddl-auto: create  # (1) 스키마 자동 생성
    #    show-sql: true      # (2) SQL 쿼리 출력
    #    properties:
    #      hibernate:
    #        format_sql: true  # (3) SQL pretty print
    #    open-in-view: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
      database: mysql
      database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
      properties:
        hibernate:
          show_sql: true
          format_sql: true

logging.level:
  org.hibernate.SQL: debug

sql:
  init:
    data-locations: classpath*:db/h2/data.sql

security:
  oauth2:
    client:
      registration:
        google:
          clientId: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_SECRET}
          scope:
            - email
            - profile

#logging:
#  level:
#    org:
#      springframework:
#        orm:
#          jpa: DEBUG

server:
  servlet:
    encoding:
      force-response: true

mail:
  address:
    admin: admin@gmail.com

jwt:
  key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 40
  refresh-token-expiration-minutes: 420

api:
  key: ${api.key}

aws:
  paramstore:
    enabled: true
    prefix: /spring-boot-aws
    name: MoovDa # 리소스 이름을 작성합니다.
    profileSeparator: _